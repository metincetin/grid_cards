local druid = require("druid.druid")

function init(self)
	self.druid = druid.new(self)

	local title = gui.get_node("title")

	msg.post(".", "acquire_input_focus")

	local p = gui.get_position(title)

	gui.set_position(title, vmath.vector3(p.x, p.y - 200, p.z))
	gui.animate(title, "position.y", p.y, gui.EASING_OUTBACK, 2, 0, nil, gui.PLAYBACK_ONCE_FORWARD)

	self.play_button = self.druid:new_button("play_button", on_play_button_clicked)
	self.settings_button = self.druid:new_button("settings_button", on_settings_button_clicked)
end

function on_settings_button_clicked()
	msg.post("/gui#popups", "show_popup", { popup = "settings" })
end

function final(self)
	self.druid:final()
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	self.druid:update()
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	self.druid:on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
	return self.druid:on_input(action_id, action)
end

function on_play_button_clicked()
	local root = gui.get_node("root")
	msg.post("/loader#match", "start")
	gui.set_enabled(root, false)
end

function handle_play_button(action)
	local play_button = gui.get_node("play_button")
	if gui.pick_node(play_button, action.x, action.y) then
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
